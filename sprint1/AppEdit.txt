
class Calculator extends React.Component {
  constructor(props) {
    super(props);
    /* state variables */
    this.state = { 
      sum: "",
      format: "",
      operand1: "", 
      operand2: "", 
      
      /* Input One's Latitude */
      degreesInput1:"",
      minutesInput1:"",
      secondsInput1:"",
      directionInput1:"",
      floatInput1:"",
      
      /* Input One's Longitude */
      degreesInput2:"",
      minutesInput2:"",
      secondsInput2:"",
      directionInput2:"",
      floatInput2:"",
      
      /* Input Two's Latitude */
      degreesInput3:"",
      minutesInput3:"",
      secondsInput3:"",
      directionInput3:"",
      floatInput3:"",
      
      /* Input Two's Longitude */
      degreesInput4:"",
      minutesInput4:"",
      secondsInput4:"",
      directionInput4:"",
      floatInput4:""
      
    };
    /* must bind all functions in constructor */
    this.updateOperand1 = this.updateOperand1.bind(this);
    this.updateOperand2 = this.updateOperand2.bind(this);
    this.setFormat = this.setFormat.bind(this);
  }

  updateOperand1(event) {
    if(format==0){
      
    }
    /* update the value of operand 1.  needs validation */
    this.setState({operand1 : event.target.value});
   
    /* check if in degree or floating point */
    if(event.target.value.includes('°')){
          /* splits the string at the degree symbol and rest is the rest of the line */
          var [deg, rest] = event.target.value.split('°');
          /* Changes the state of degrees*/
          this.setState({degreesInput1: deg});
          /* splits the string at the single qoute symbol and rest is the rest of the line */
          if(rest.includes('\'')){
              var [min, rest] = rest.split('\'');
               /* Changes the state of minutes */
               this.setState({minutesInput1: min});

               if(rest.includes('"')){
                  var [sec, dir] = rest.split('"');
                  /* Changes the state of seconds */
                  this.setState({secondsInput1: sec});
                 /* Changes the state of direction */
                  this.setState({directionInput1: dir}); 
               }
               /* No Seconds changes state of direction */
               else{
                    this.setState({directionInput1: rest});
               }     
          }
          else{
              this.setState({directionInput1: rest});
          }
     }
    else{
        var [lat, long] = event.target.value.split(' ');
        this.setState({floatInput1: lat});
        this.setState({floatInput2: long});
    }
    this.setState({sum : Number(3958.7613 * Math.acos(Math.sin(1)*Math.sin(1) + Math.cos(1)*Math.cos(1)*(1-1)))})    
  }

  updateOperand2(event) {
    
    /* update the value of operand 2.  needs validation */
    this.setState({operand2 : event.target.value});
    
    /* check if in degree or floating point */
    if(event.target.value.includes('°')){
         /* splits the string at the degree symbol and rest is the rest of the line */
        var [deg, rest] = event.target.value.split('°');
        /* Changes the state of degrees*/
        this.setState({degreesInput3: deg});
             /* splits the string at the single qoute symbol and rest is the rest of the line */
            if(rest.includes('\'')){
              var [min, rest] = rest.split('\'');
               /* Changes the state of minutes */
               this.setState({minutesInput3: min});

               if(rest.includes('"')){
                  var [sec, dir] = rest.split('"');
                  /* Changes the state of seconds */
                  this.setState({secondsInput3: sec});
                 /* Changes the state of direction */
                  this.setState({directionInput3: dir}); 
               }
               /* No Seconds changes state of direction */
               else{
                    this.setState({directionInput3: rest});
               }     
            }
          else{
            this.setState({directionInput3: rest});
          }
    }
    else{
        var [lat, long] = event.target.value.split(' ');
        this.setState({floatInput3: lat});
        this.setState({floatInput4: long});
    } 
    this.setState({sum : Number(3958.7613 * Math.acos(Math.sin(1)*Math.sin(1) + Math.cos(1)*Math.cos(1)*(1-1)))})
 }
  
  DMS(event){
    temp_long: "";
    if(event.target.value.includes('N')){
      var [lat, long] = event.target.value.split('N');
      this.setState({temp_long: long});
      var[deg, rest] = lat.split('°'); /* get degrees for latitude */
      this.setState({degreesInput1: deg});
      var [min, rest] = rest.split('\''); /* get minutes for latitude */
      this.setState({minutesInput1: min});
      var [sec, dir] = rest.split('"'); /* get seconds for latitude */
      this.setState({secondsInput1: sec});
      floatInput1 = degreesInput1 + (minutesInput1/60) + (secondsInput1/3600); /* change latitude to floating point */
    }else if(event.target.value.includes('S')){
      
    }
    
    if(temp_long.includes('W')){
      var [deg, rest] = temp_long.split('°'); /* get degrees for longitude */
      this.setState({degreesInput1: deg});
      var [min, rest] = rest.split('\''); /* get minutes for latitude */
      this.setState({minutesInput1: min});
      var [sec, dir] = rest.split('"'); /* get seconds for latitude */
      this.setState({secondsInput1: sec});
      floatInput2 = -1 * (degreesInput1 + (minutesInput1/60) + (secondsInput1/3600)); /* change longitude to floating point, negative due to being west */
    }else if(temp_long.includes('E')){
      
    }
  }
  
  setFormat(event){
    this.setState({format: event.target.value});
  }
  
  render() {
    /* a simple form with text input and a submit button  */
    return (
      
      <form className="form-inline" onSubmit={this.calc}>
        <p>
        <label>
          Select Input Format
          {/*This is the dropdown menu
             Whichever option is selected, it changes this.state.format to 0 through 3 
          */}
          <select value={this.state.format} onChange={this.setFormat}>
            <option disbled>Choose One...</option>
            <option value="0">DMS [ 40° 26′ 46″ N 79° 58′ 56″ W ]</option>
            <option value="1">DDM [ 40° 26.767′ N 79° 58.933′ W ]</option>
            <option value="2">DD [ 40.446° N 79.982° W ]</option>
            <option value="3">FP [ 40.445 -79.982 ]</option>
          </select>
        </label>
        </p>
        <br />
        <label>
        Start
          <input type="text" className="text-right form-control mr-sm-2" 
            value={this.state.operand1} onChange={this.updateOperand1}/> 
        
          <button className="btn btn-secondary mr-sm-2" disabled>to</button>
        End
          <input type="text" className="text-right form-control mr-sm-2" 
            value={this.state.operand2} onChange={this.updateOperand2}/> 

          <button className="btn btn-primary mr-sm-2" type="submit" value="submit" 
            disabled>=</button>

          <input type="text" className="text-right form-control mr-sm-2" 
            value={this.state.sum} disabled/>
        </label>
      </form>
    )
  } 
}

class Application extends React.Component {
  render() {
    /* separate the page layout from the calculator function */
    return (
      <div className="jumbotron">
        <h3>CS 314 - Distance Calculator t07 - Jackalope</h3>
        <hr/>
        <Calculator />
      </div>  
    )
  }
}

ReactDOM.render(<Application  />, document.getElementById("application"));